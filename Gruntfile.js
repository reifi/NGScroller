// Generated by CoffeeScript 1.7.1
(function() {
  module.exports = function(grunt) {
    grunt.loadNpmTasks('grunt-karma');
    grunt.loadNpmTasks('grunt-contrib-connect');
    grunt.loadNpmTasks('grunt-contrib-watch');
    grunt.loadNpmTasks('grunt-contrib-coffee');
    grunt.loadNpmTasks('grunt-contrib-jshint');
    grunt.loadNpmTasks('grunt-contrib-concat');
    grunt.initConfig({
      connect: {
        app: {
          options: {
            base: './src/',
            middleware: require('./server/middleware'),
            port: 5001
          }
        }
      },
      watch: {
        options: {
          livereload: false
        }
      },
      karma: {
        unit: {
          options: {
            autoWatch: true,
            colors: true,
            configFile: './test/karma.conf.js',
            keepalive: true,
            port: 8081,
            runnerPort: 9100
          }
        },
        travis: {
          options: {
            colors: true,
            configFile: './test/karma.conf.js',
            runnerPort: 9100,
            singleRun: true
          }
        }
      },
      coffee: {
        build: {
          files: [
            {
              cwd: './src',
              src: 'scripts/**/*.coffee',
              dest: './temp/',
              expand: true,
              ext: '.js'
            }
          ],
          options: {
            bare: true
          }
        }
      },
      concat: {
        options: {
          banner: "'use strict';\n",
          process: function(src, filepath) {
            var singleQuotes, strings;
            console.log("Processing " + filepath + " ...");
            strings = /("(?:(?:\\")|[^"])*")/g;
            singleQuotes = /'/g;
            return src.replace(strings, function(match) {
              var result;
              console.log("match: " + match);
              result = "'" + match.substring(1, match.length - 1).replace(singleQuotes, "\\'") + "'";
              console.log("replaced with: " + result);
              return result;
            });
          }
        },
        dynamic_mappings: {
          files: {
            'build/scripts/scroll.js': ['./temp/**/ui-scroll.js'],
            'build/scripts/scroll-jqlite.js': ['./temp/**/ui-scroll-jqlite.js']
          }
        }
      },
      jshint: {
        src: {
          files: {
            src: ['./build/**/*.js']
          },
          options: {
            jshintrc: '.jshintrc'
          }
        },
        test: {
          files: {
            src: ['./test/*Spec.js']
          },
          options: grunt.util._.extend({}, grunt.file.readJSON('.jshintrc'), {
            node: true,
            globals: {
              angular: false,
              inject: false,
              jQuery: false,
              jasmine: false,
              afterEach: false,
              beforeEach: false,
              ddescribe: false,
              describe: false,
              expect: false,
              iit: false,
              it: false,
              spyOn: false,
              xdescribe: false,
              xit: false
            }
          })
        }
      }
    }, grunt.registerTask('server', ['connect', 'watch']));
    grunt.registerTask('default', ['server']);
    grunt.registerTask('test', ['karma:unit']);
    grunt.registerTask('build', ['jshint:test', 'karma:travis', 'coffee:build', 'concat', 'jshint:src']);
    return grunt.registerTask('travis', ['karma:travis']);
  };

}).call(this);
